#!/usr/bin/env bash -eu
# @(#) relax: utils for configurations

############
### YAML ###
############

config_get_distributions () {
	relparser -f "$1" list
}

_check_config () {
	if [[ "${REL_CONFIG_xcodeproj:-undefined}" = undefined ]]; then
		if [[ "${REL_CONFIG_workspace:-undefined}" = undefined ]]; then
			die "Please configure 'xcodeproj:' or 'workspace:' field on the top of config file."
		fi
	fi

	if [[ ${REL_CONFIG_log_formatter:-undefined} != undefined ]]; then
		if which "$REL_CONFIG_log_formatter" > /dev/null; then
			export REL_LOG_FORMATTER="$REL_CONFIG_log_formatter"
		else
			logi "$WARN Relfile: \`${REL_CONFIG_log_formatter}\` isn't installed"
			export REL_LOG_FORMATTER=
		fi
	else
		export REL_LOG_FORMATTER=
	fi
}

_export_config() {
	###################################################################
	# NOTE: Escape an unbound error when a env var is used in Relfile #
	#       See test/SampleApp/Relfile in this repository             #
	###################################################################
	echo "set +u" > $REL_TEMP_DIR/config

	relparser -f "$1" export $REL_TEMP_DIR/config

	echo "set -u" >> $REL_TEMP_DIR/config

	source $REL_TEMP_DIR/config
}

config_find() {
	echo "$(find . -name $REL_CONFIG -maxdepth 1)"
}

# config_load <config-path>
config_load () {
	if test ! -d $REL_TEMP_DIR; then
		die "config_load: Not found Temporary directory"
	fi

	if [ $# = 0 ]; then
		die "config_load: argument is invalid"
	fi

	local config_path=$1
	logi "$ARROW Loading ${config_path#\./}"
	
	if [ -f "$config_path" ]; then
		_export_config $config_path
	else
		message=$(
		cat <<-EOM
		$ERR Not found $REL_CONFIG in the current dir.
		Please run \`/path/to/$ME init\` here, and then set up a config file.
		EOM
		)
		die "$message"
	fi
	
	_check_config
}

declare -x -f _check_config _export_config
declare -x -f config_load config_find config_get_distributions
