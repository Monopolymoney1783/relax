#!/bin/bash -eu
# @(#) relax: `upload` command
# completions

usage () {
	cat <<-EOM
	Usage: ${ME} upload [-f <release-note>] [-n] <services> <ipa_file>

	Services:
	    crashlytics
	    testfairy

	Options:
	    -f release_note	Specify a release note file
	    -n			Dry run
	EOM
	fin
}

# print_release_note <ipa> <release_note>
print_release_note () {
	logi "$ARROW Start uploading ipa file: $ipa_file"
	logi "----------Release Note---------------"
	cat "$release_note_file" | logi
	logi "-------------------------------------"
}

# upload_crashlytics <ipa> <release-note-file>
# https://docs.fabric.io/apple/beta/build-tools.html
upload_crashlytics () {

	local crashlytics_path=$(find $HERE -name "Crashlytics.framework" | \
	while IFS= read file; do
		if $file/submit | grep -q error; then
			:
		else
			echo "$file"
			break
		fi
	done)

	local ipa_file="$1"
	local release_note_file="$2"

	print_release_note "$@"

	logi "$ARROW Uploading to Crashlytics"

	local upload_command="\
	$crashlytics_path/submit\
	  $REL_CONFIG_uploader_crashlytics_token\
	  $REL_CONFIG_uploader_crashlytics_secret\
	  -ipaPath '$ipa_file' \
	  -notesPath '$release_note_file'"

	if [[ "${REL_CONFIG_uploader_crashlytics_group:-undefined}" != undefined  ]]; then
		upload_command+=" -groupAliases '$REL_CONFIG_uploader_crashlytics_group'"
	fi

	logi "${upload_command}"

	[[ $dry_run = false ]] || return 0;
		
	eval "${upload_command}"
}

# upload_testfairy <ipa> <release-note-file>
# See https://docs.testfairy.com/index.html
upload_testfairy () {
	local ipa_file="$1"
	local release_note_file="$2"

	print_release_note "$@"

	local comment=$( cat $release_note_file  )

	logi "$ARROW Uploading to TestFairy"

	local upload_command="\
	curl https://app.testfairy.com/api/upload\
	  -F file=@'$ipa_file'\
	  -F api_key='$REL_CONFIG_uploader_testfairy_api_key'\
	  -F metrics='$REL_CONFIG_uploader_testfairy_metrics'\
	  -F notify='$REL_CONFIG_uploader_testfairy_notify'\
	  -F video='$REL_CONFIG_uploader_testfairy_video'\
	  -F testers_groups='$REL_CONFIG_uploader_testfairy_groups'\
	  -F comment='$comment'"
	  # -F symbols_file=@'$DSYM_FILE'\

	logi "${upload_command}"

	[[ $dry_run = false ]] || return 0;

	eval "${upload_command}"
}


[[ $# != 0 ]] || usage

service=
release_note_file=
dry_run=false
ipa_file=

while [ $# -ne 0 ];  do
	arg=$1
	shift
	case $arg in
	-h|--help) 
		usage 
		;;
	--completions)
		if [[ $# == 0 ]]; then
			echo "crashlytics testfairy"
		else
			:
		fi
		fin
		;;
	-n)
		dry_run=true
		;;
	-f)
		[[ $# != 0 ]] ||  usage
		[[ -f $1 ]]  || die "Not found $1"
		release_note_file=$1
		shift
		;;
	*)
		if [[ $# != 0 ]]; then
			service=$arg
		else
			ipa_file=$arg
			[[ -f "$ipa_file" ]] || die "Not found $ipa_file"
		fi
		;;
	esac
done

[[ -n $ipa_file ]] || usage
if [[ -z $release_note_file ]]; then
	release_note_file="$REL_TEMP_DIR/release_note"
	echo $(git log -1 --decorate) > "$release_note_file"
fi

config_load "$REL_CONFIG_PATH"

case $service in
crashlytics)
	upload_crashlytics "$ipa_file" "$release_note_file"
	;;
testfairy)
	upload_testfairy "$ipa_file" "$release_note_file"
	;;
*)
	usage
	;;
esac
