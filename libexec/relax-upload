#!/usr/bin/env bash -eu
# @(#) relax: `upload` command
# completions

usage () {
	cat <<-EOM
	Usage: ${ME} upload <services> [-f <release-note>] ipa_file

	Services:
	    crashlytics
	    testfairy

	Options:
	    -f release_note	Specify a release note file
	EOM
	fin
}

# upload_crashlytics <ipa> <release-note-file>
# https://docs.fabric.io/apple/beta/build-tools.html
upload_crashlytics () {

	local crashlytics_path=$(find $HERE -name "Crashlytics.framework" | \
	while IFS= read file; do
		if $file/submit | grep -q error; then
			:
		else
			echo "$file"
			break
		fi
	done)

	local ipa_file="$1"
	local release_note_file="$2"

	logi "$ARROW Uploading to Crashlytics"

	local upload_command="$crashlytics_path/submit\
	  $REL_CONFIG_crashlytics_token\
	  $REL_CONFIG_crashlytics_secret\
	  -ipaPath $ipa_file \
	  -groupAliases $REL_CONFIG_crashlytics_group \
	  -notesPath $release_note_file"

	logi "${upload_command}"

	#eval "${upload_command}"
}

# upload_testfairy <ipa> <release-note-file>
# See https://docs.testfairy.com/index.html
upload_testfairy () {
	local ipa_file="$1"
	local release_note_file="$2"

	local comment=$( cat $release_note_file  )

	logi "$ARROW Uploading to TestFairy"

	curl https://app.testfairy.com/api/upload \
	  -F file=@"$ipa_file" \
	  -F api_key=$REL_CONFIG_testfairy_api_key\
	  # -F symbols_file=@"$DSYM_FILE" \
	  -F metrics=$REL_CONFIG_testfairy_metrics\
	  -F notify=$REL_CONFIG_testfairy_notify\
	  -F video=$REL_CONFIG_testfairy_video \
	  -F testers_groups="$REL_CONFIG_testfairy_groups"\
	  -F comment="$comment"
}


[[ $# != 0 ]] || usage

service=
release_note_file=
ipa_file==

while [ $# -ne 0 ];  do
	arg=$1
	shift
	case $arg in
	-h|--help) 
		usage 
		;;
	--completions)
		if [[ $# == 0 ]]; then
			echo "crashlytics testfairy"
		else
			:
		fi
		fin
		;;
	-f)
		[[ $# != 0 ]] ||  usage
		[[ -f $1 ]]  || die "Not found $1"
		release_note_file=$1
		shift
		;;
	*)
		if [[ $# != 0 ]]; then
			service=$arg
		else
			ipa_file=$arg
			[[ -f "$ipa_file" ]] || die "Not found $ipa_file"
		fi
		;;
	esac
done

config_load "$REL_CONFIG_PATH"

if [[ -z $release_note_file ]]; then
	release_note_file="$REL_TEMP_DIR/release_note"
	echo $(git log -1 --decorate) > "$release_note_file"
fi

[[ -n $ipa_file ]] || usage

logi "$ARROW Start uploading ipa file: $ipa_file"
logi "----------Release Note---------------"
cat "$release_note_file"
logi "-------------------------------------"

case $service in
crashlytics)
	upload_crashlytics "$ipa_file" "$release_note_file"
	;;
testfairy)
	upload_testfairy "$ipa_file" "$release_note_file"
	;;
*)
	usage
	;;
esac
