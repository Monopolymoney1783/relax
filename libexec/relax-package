#!/usr/bin/env bash -eu
# @(#) relax: `package` command
# completions

usage() {
	cat <<-EOM
	Usage: ${ME} package <distribution> <package_path>
	EOM
	fin
}

make_package() {
	[[ $# == 2 ]] || usage

	local distribution=$1
	local package_dir=$2
	local temp_dir=$REL_TEMP_DIR/package

	[[ " ${REL_DISTRIBUTIONS[@]} " =~ " $distribution "  ]]  || die "Not found '$distribution' distribution"

	### Make artifacts

	logi "$ARROW Packaging ipa and xcarchive ..."
	{
	mkdir -p "$temp_dir"
	if grep -q "/" <<< "$package_dir"; then
		local package_parent_dir="${package_dir%/*}"
		if [[ ! -d "$package_parent_dir" ]]; then
			mkdir -p "$package_parent_dir"
		fi
	fi
	} > /dev/null 2>&1
	

	local ipa_path="$(read_path $distribution ipa)"
	[[ -f "$ipa_path" ]] || die "Not found '$distribution' ipa"

	logi "Found ipa: $ipa_path"
	cp "$ipa_path" "$temp_dir"

	local archive="$(read_path $distribution archive)"
	if [[ -d "$archive" ]]; then
		local zipname="$(basename "$archive")".zip
		logi "Found archive: $archive"
		ditto -c -k --sequesterRsrc --keepParent "$archive" "$temp_dir/$zipname"
	else
		logi "$WARN Not found '$distribution' archive"
	fi

	rm -rf "$package_dir"
	cp -a "$temp_dir" "$package_dir"
	logi "Successfully packaged in ./$package_dir:"
	ls -1 "$package_dir" | awk '{ print "    âœ“ "$0 }'
}


[[ $# != 0 ]] || usage

arg=$1
shift
case $arg in
-h|--help) 
	usage 
	;;
--completions)
	if [[ $# == 0 ]]; then
		echo "${REL_DISTRIBUTIONS[@]}"
	else
		:
	fi
	fin
	;;
*)
	;;
esac

make_package "$arg" "$@"

