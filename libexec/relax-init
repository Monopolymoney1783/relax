#!/bin/bash -eu
# @(#) relax: `init` command

usage () {
	cat <<-EOM
	usage: ${ME} init
	EOM
	fin
}

print_completion_path () {
	completion="$SOURCE_PATH/completions/relax.${SHELL##*/}"
	echo "$completion"
}

while [ $# -ne 0 ];
do
	arg=$1
	shift
	case $arg in
	completion|completions)
		print_completion_path
		fin
		;;
	-h|--help|*)
		usage
		;;
	esac
done

if ! test -f $PWD/$REL_CONFIG; then
	scheme=
	project=

	logi "Creating Relfile"

	# Check xcworkproj existance
	if ls | grep xcworkspace > /dev/null; then
		workspace=$(ls | grep xcworkspace)
		logi "Found workspace: ${workspace}"
		xcodebuild -list -workspace "$workspace" > $REL_TEMP_DIR/xcode_build_list
		project="$workspace"
	elif ls | grep xcodeproj > /dev/null; then
		xcodeproj=$(ls | grep xcodeproj)
		logi "Found project: ${xcodeproj}"
		xcodebuild -list -project "$xcodeproj" > $REL_TEMP_DIR/xcode_build_list
		project="$xcodeproj"
	fi

	# Set up Scheme
	## Get scheme list

	cat $REL_TEMP_DIR/xcode_build_list | grep -q 'This project contains no schemes.' && die "Please set up a shared scheme"

	awk -f $LIBEXEC_DIR/init-scheme.awk $REL_TEMP_DIR/xcode_build_list \
		> $REL_TEMP_DIR/xcode-build-schemes
	source $REL_TEMP_DIR/xcode-build-schemes

	n=1
	(
		IFS='\n'
		for  s in ${xcode_schemes[@]}
		do
			echo "$n. $s"
			n=$(($n + 1))
		done
	)
	echo "Select Scheme by number:"
	read number
	if [[ $number < ${#xcode_schemes[@]} && $number > 0 ]]; then
		scheme=${xcode_schemes[$(($number - 1))]}
	else
		die "Invalid number"
	fi

	## Generate Relfile
	generate_relfile "$project" "$scheme" ""
	cp $REL_TEMP_DIR/Relfile ./Relfile
	logi "Done"
else
	fin "Found an existing Relfile"
fi
