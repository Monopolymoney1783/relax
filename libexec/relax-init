#!/bin/bash -eu
# @(#) relax: `init` command

usage () {
	cat <<-EOM
	usage: ${ME} init
	EOM
	fin
}

print_completion_path () {
	completion="$SOURCE_PATH/completions/relax.${SHELL##*/}"
	echo "$completion"
}

while [ $# -ne 0 ];
do
	arg=$1
	shift
	case $arg in
	completion|completions)
		print_completion_path
		fin
		;;
	-h|--help|*)
		usage
		;;
	esac
done

if ! test -f $PWD/$REL_CONFIG; then
	scheme=
	project=
	number=
	i=

	logi "Creating Relfile"
	
	# Set up Xcodeproj or Workspace
	ls | grep -e xcworkspace -e xcodeproj > $REL_TEMP_DIR/xcode_projects

	i=1
	while IFS='\n' read e
	do
		logi "$i. $e"
		i=$(($i + 1))
	done < $REL_TEMP_DIR/xcode_projects

	logi "Select Entry point by number:"
	read -p "? " number

	if [[ $number < $i && $number > 0 ]]; then
		project="$(sed -n "${number}p" $REL_TEMP_DIR/xcode_projects)"
	else
		die "Invalid number"
	fi

	if [[ $project =~ "xcworkspace" ]]; then
		logi "Workspace: $project"
		xcodebuild -list -workspace "$project" > $REL_TEMP_DIR/xcode_build_list
	elif [[ $project =~ "xcodeproj" ]]; then
		logi "Project: $project"
		xcodebuild -list -project "$project" > $REL_TEMP_DIR/xcode_build_list
	else
		die "Unexpected inputs: $project"
	fi

	# Set up Scheme
	cat $REL_TEMP_DIR/xcode_build_list \
		| grep -q 'This project contains no schemes.' \
			&& die "Please set up a shared scheme"

	awk -f $LIBEXEC_DIR/init-scheme.awk $REL_TEMP_DIR/xcode_build_list \
		> $REL_TEMP_DIR/xcode_build_schemes

	i=1
	while IFS='\n' read s
	do
		logi "$i. $s"
		i=$(($i + 1))
	done < $REL_TEMP_DIR/xcode_build_schemes

	logi "Select Scheme by number:"
	read -p "? " number

	if [[ $number < $i && $number > 0 ]]; then
		scheme="$(sed -n "${number}p" $REL_TEMP_DIR/xcode_build_schemes)"
	else
		die "Invalid number"
	fi

	logi "Scheme: $scheme"

	## Generate Relfile
	generate_relfile "$project" "$scheme" ""

	cp $REL_TEMP_DIR/Relfile ./Relfile

	logi "Done"
	logw "Fill in the ${BOLD}\`provisioning_profile\`${NC} field in Relfile."
else
	fin "Found an existing Relfile"
fi
