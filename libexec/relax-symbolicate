#!/usr/bin/env bash -eu
# @(#) relax: `symbolicate` command

usage () {
	cat <<-EOM
	usage: ${ME} symbolicate <crashlog> <archive|ipa>

	If you use an IPA file, a crash log can't be fullly symbolicated.
	EOM
	fin
}

# symbolicate <crashlog> <material>
symbolicate () {
	local crashlog material out
	[ $# -eq 2 ] || usage

	crashlog=$1
	material=$2

	[[ -d /Applications/Xcode.app ]] || die "Please install Xcode.app"
	
	export DEVELOPER_DIR=/Applications/Xcode.app/Contents/Developer

	symbolicatecrash_path=/Applications/Xcode.app/Contents/SharedFrameworks/DVTFoundation.framework/Versions/A/Resources/symbolicatecrash
	
	logi "$ARROW Symbolicating '$crashlog'..."

	local app_path dsym_path
	if grep -q "\.ipa$" <<< "$material"; then
		local payload=$REL_TEMP_DIR
		unzip -q "$material" -d "$payload"
		app_path=$(find "$payload" -name "*.app")
	elif grep -q "\.xcarchive$" <<< "$material"; then
		app_path=$(find "$material" -name "*.app")
		dsym_path=$(find "$material" -name "*.app.dSYM")
	else
		die "Unexpected file: $material"
	fi

	out=${crashlog%%\.crash}-symbolicated.crash
	logv "Using $app_path"
	if [[ -d "$dsym_path" ]]; then
		logv "Using $dsym_path"
	fi
	if "$symbolicatecrash_path" "$crashlog" "$app_path" "$dsym_path" -o "$out"; then
		logi "$out"
	else
		die
	fi
}

[[ $# != 0 ]] || usage

case $1 in
-h) usage ;;
esac

symbolicate "$@"
