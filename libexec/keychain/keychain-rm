#!/usr/bin/env bash -eu
# @(#) relax `keychain-rm` command
# completions

usage () {
	cat <<-EOM
	usage: ${ME} keychain rm <cert-hash> -k <keychain> -p <keychain-pass>

	EOM
	fin
}

# rm_identity <p12> -P <password> -k <keychain> -p <keychain-pass>
rm_identity () {
	if [[ $# != 7 ]]; then
		usage
	fi

	local keychain keychain_pass cert_hash
	is_sudo=false

	while [ $# -ne 0 ];
	do
		arg="$1"
		shift
		case $arg in
		-k)
			keychain="$1"
			shift
			;;
		-p)
			keychain_pass=$1
			shift
			;;
		*)
			cert_hash="$arg"
			;;
		esac
	done

	[[ -n $cert_hash ]] || usage;
	[[ -n $keychain ]] || usage;
	[[ -n $keychain_pass ]] || usage;


	if [[ -n $keychain ]]; then
		if ! is_exist_keychain "$keychain"; then
			die "$ERR Not found keychain: $keychain. Try to run 'relax keychain create $keychain -p $keychain_pass'"
		fi
	fi

	if [[ "$keychain" = "System.keychain" ]]; then
		keychain="$SYSTEM_KEYCHAINS/$keychain"
		is_sudo=true
	else
		trap "relax keychain reset" EXIT INT TERM
		relax keychain use "$keychain" -p $keychain_pass
	fi

	logi "$ARROW Remove $cert_hash identity"

	cmd="$SECURITY delete-certificate -Z $cert_hash $keychain"
	if [[ $is_sudo = true ]]; then
		sudo bash -c "$cmd"
	else
		eval "$cmd"
	fi
}

[[ $# != 0 ]] || usage

case $1 in
-h|--help) usage ;;
--completions) 
	while [[ $# != 0 ]]; 
	do
		case $1 in
			-) fin "-k -P -p" ;;
			-k) list_keychain | grep -v "\(System\|login\|metadata\)" | xargs
		esac
		shift
	done
	fin
	;;
esac

rm_identity "$@"
