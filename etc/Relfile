#
# Relax configuration YAML
#

# Required 'xcodeproj' OR 'workspace'
xcodeproj: WORKSPACE
workspace: XCODEPROJ

release1: # Required
  scheme: SCHEME # Required

  sdk:           SDK  # Optional. 'ipthoneos' is the default. i.e. iphoneos, iphoneos10.0

  configuration: CONFIGURATION # Optional. The default is following the scheme. i.e. Release

  team_id: J3D7L9FHSS # Optional. The default is following the project settings.

  provisioning_profile: "Scenee Wild Card Dev" # Optional. If it's set, Relax automatically build a product on 'Manual' provisioning style.

  ## Bundle version format
  # %V: Release version number
  # %v: Build version number
  # %C: Build configuration
  # %R: SCM commit ref
  # %B: SCM branch name
  #######################
  bundle_version_format:  "%R-%C"

  bundle_identifier: com.example.SampleApp # Optional. Change the default bundle identifier in a project

  build_settings: # Optional
    OTHER_SWIFT_FLAGS: "-DMOCK"
    OTHER_C_FLAGS:
      - "-fembed-bitcode"
      - "-fsanitize=address"

  info_plist:
    CFBundleName: Sample (Debug)
    CFBundleVersion: "%R-%C"
    CFBundleDevelopmentRegion: en
    UISupportedExternalAccessoryProtocols:
      - com.example.SampleApp
      - com.example.SampleApp2

  export_options:
    # Describes how Xcode should export the archive. 
    # Available options: app-store, package, ad-hoc, enterprise, development, and developer-id. 
    # The list of options varies based on the type of archive. Defaults to development.
    method:  development # Required. 

    # For App Store exports, should the package include symbols? Defaults to YES.
    upload_symbols: true # Optional.

    # For non-App Store exports, should Xcode re-compile the app from bitcode? Defaults to YES.
    compileBitcode: true # Optional.
    # The Developer Portal team to use for this export. Defaults to the team used to build the archive.
    team_id: XXXXXX # Optional.

    # For App Store exports, should the package include bitcode? Defaults to YES.
    uploadBitcode : true # Optional.

    # For non-App Store exports, should Xcode thin the package for one or more device variants? Available options: <none> (Xcode produces a non-thinned universal app), <thin-for-all-variants> (Xcode produces a universal app and all available thinned variants), or a model identifier for a specific device (e.g. "iPhone7,1"). Defaults to <none>.
    thinning : "iPhone7,1" # Optional.

    # TODO: For non-App Store exports, if the app uses On Demand Resources and this is YES, asset packs are embedded in the app bundle so that the app can be tested without a server to host asset packs. Defaults to YES unless onDemandResourcesAssetPacksBaseURL is specified.
    #embedOnDemandResourcesAssetPacksInBundle: true # Optional.

    # TODO: For non-App Store exports, users can download your app over the web by opening your distribution manifest file in a web browser. To generate a distribution manifest, the value of this key should be a dictionary with three sub-keys: appURL, displayImageURL, fullSizeImageURL. The additional sub-key assetPackManifestURL is required when using on demand resources.
    # manifest : Dictionary

    # TODO: For non-App Store exports, if the app uses On Demand Resources and embedOnDemandResourcesAssetPacksInBundle isn't YES, this should be a base URL specifying where asset packs are going to be hosted. This configures the app to download asset packs from the specified URL.
    # onDemandResourcesAssetPacksBaseURL : String

    # TODO: For non-App Store exports, if the app is using CloudKit, this configures the "com.apple.developer.icloud-container-environment" entitlement. Available options: Development and Production. Defaults to Development.
    #iCloudContainerEnvironment:


release2:
  scheme: SCHEME

log_formatter: xcpretty # Optional. Relax will pass xcodebuild's stdout to it.

crashlytics:
  token:  __TOKEN__
  secret: __SECRET__
  group:  __GROUP__

testfairy:
  api_key: __API_KEY__
  metrics: __METRICS__
  groups: __GROUPS__
  video: __VIDEO__
  notfiy: __NOTIFY__

# vim: set sts=2 sw=2 ts=2 ft=yaml expandtab :Â¬
